{"version":3,"sources":["assets/images/no_image.png","components/CustomHeader.tsx","screens/MainScreen/MainScreen.tsx","components/AnimatedHeart.tsx","constants/Colors.ts","navigation/LinkingConfiguration.ts","screens/AnimatedModal/Register.tsx","screens/AnimatedModal/Login.tsx","screens/AnimatedModal/AuthForm.tsx","screens/AnimatedModal/AnimatedModal.tsx","screens/ListScreen/AddForm.tsx","screens/ListScreen/ListCard.tsx","screens/ListScreen/VerticalList.tsx","screens/ListScreen/ListScreen.tsx","components/Bubble.tsx","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","screens/MainScreen/MainCard.tsx","screens/MainScreen/HorizontalFlat.tsx","screens/MainScreen/Jumbo.tsx","screens/MainScreen/Pagination.tsx","screens/MainScreen/MainContent.tsx","constants/Styles.ts","assets/fonts/Montserrat-Regular.ttf","assets/fonts/Montserrat-Bold.ttf","assets/fonts/AveriaSerifLibre-Regular.ttf","assets/fonts/AveriaSerifLibre-Bold.ttf","assets/images/logo.png","assets/images/main.jpg","components/CustomText.tsx","firebase/utils.ts","firebase/config.ts","assets/images/gray.png"],"names":["module","exports","CustomHeader","bubbleShow","setBubbleShow","navigate","useNavigation","derived","useDerivedValue","withTiming","cStyle","useAnimatedStyle","transform","rotate","value","style","styles","safe","container","wrapper","onPress","image","source","require","account","prevCheck","name","size","color","Colors","green","View","marginBottom","marginRight","StyleSheet","create","backgroundColor","darkGreen","paddingHorizontal","Styles","bigPaddingHorizontal","height","header","width","alignItems","maxWidth","flexDirection","justifyContent","borderRadius","MainScreen","navigation","opacity","useSharedValue","useEffect","interval","setInterval","clearInterval","saleHeader","flex","beige","AnimatedHeart","useState","active","setActive","show","offStyle","scale","interpolate","activeStyle","withSpring","pressed","barItem","current","gray","position","lightGreen","purple","babyGray","lightGray","gold","linking","prefixes","Linking","config","screens","Main","path","List","Register","closeModal","initialValues","email","password","confirmPassword","onSubmit","values","onSubmitProps","a","async","registerUser","authEmail","authPassword","alert","registerHandler","resetForm","validationSchema","yup","shape","required","min","max","equals","handleChange","errors","setFieldTouched","touched","isValid","handleSubmit","formContainer","TextInput","inputStyle","onChangeText","onBlur","placeholder","Text","fontSize","secureTextEntry","Button","title","disabled","padding","borderWidth","borderColor","Login","signInUser","signInHandler","console","disableYellowBox","AuthForm","setModalShow","mode","setMode","TouchableWithoutFeedback","formBg","CustomText","black","window","wHeight","zIndex","maxHeight","AnimatedModal","top","left","bottom","right","flexGrow","AddForm","displayName","trim","storeImage","storePhone","matches","storeOpen","storeClose","idName","replace","toLowerCase","log","addDoc","farmsRef","storeHours","open","close","message","submitHandler","ListCard","item","id","React","Image","uri","defaultSource","info","fancy","bold","AntDesign","farmDoc","doc","db","deleteDoc","starSize","location","ratings","phoneNumberString","match","phoneFormat","overflow","shadowColor","shadowOffset","shadowOpacity","shadowRadius","display","marginHorizontal","FarmList","data","setData","onSnapshot","snapshot","farms","docs","forEach","push","FlatList","keyExtractor","index","contentContainerStyle","contentContainer","renderItem","paddingVertical","ListScreen","user","setUser","onAuthStateChanged","auth","currentUser","paddingTop","Bubble","bubble","TouchableOpacity","marginVertical","fontWeight","signOut","elevation","MyTheme","DefaultTheme","colors","background","Navigation","modalShow","NavigationContainer","LinkingConfiguration","fallback","theme","RootNavigator","Stack","createNativeStackNavigator","Navigator","screenOptions","headerShown","Screen","component","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","FontAwesome","font","montserrat","averia","warn","useCachedResources","getFunctions","StatusBar","Card","setImage","onError","btnContain","HorizontalFlat","horizontal","showsHorizontalScrollIndicator","margin","Jumbo","jumbo","jumboRight","Pressable","button","PressBtn","direction","MaterialIcons","Pagination","rightSide","marginLeft","MainContent","wWidth","Dimensions","get","sWidth","sHeight","isSmallDevice","children","numberOfLines","fancyFont","defaultColor","fontFamily","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","getAuth","collection","createUserWithEmailAndPassword","signInWithEmailAndPassword"],"mappings":"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","file":"static/js/app.a68ba7c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.c8005314.png\";","import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  SafeAreaView,\n  Image,\n  Pressable,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport Colors from \"../constants/Colors\";\nimport Styles from \"../constants/Styles\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { useState } from \"react\";\nimport Animated, {\n  useAnimatedStyle,\n  useDerivedValue,\n  withTiming,\n} from \"react-native-reanimated\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function CustomHeader({ bubbleShow, setBubbleShow }: any) {\n  const navigate = useNavigation();\n\n  const toggleAccountHandler = () => {\n    setBubbleShow((prevCheck: boolean) => !prevCheck);\n  };\n\n  const derived = useDerivedValue(\n    () => (bubbleShow ? withTiming(\"180deg\") : withTiming(\"0deg\")),\n    [bubbleShow]\n  );\n\n  const cStyle = useAnimatedStyle(() => {\n    return {\n      transform: [{ rotate: derived.value }],\n    };\n  });\n\n  return (\n    <SafeAreaView style={styles.safe}>\n      <View style={styles.container}>\n        <View style={styles.wrapper}>\n          <TouchableWithoutFeedback onPress={() => navigate.navigate(\"Main\")}>\n            <Image\n              style={styles.image}\n              source={require(\"../assets/images/logo.png\")}\n            />\n          </TouchableWithoutFeedback>\n          <Pressable style={styles.account} onPress={toggleAccountHandler}>\n            <FontAwesome name=\"user-circle\" size={30} color={Colors.green} />\n            <Animated.View style={cStyle}>\n              <FontAwesome\n                name=\"chevron-down\"\n                size={20}\n                color={Colors.green}\n                style={{ marginBottom: 2.5, marginRight: 2.5 }}\n              />\n            </Animated.View>\n          </Pressable>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  safe: {\n    backgroundColor: Colors.darkGreen,\n  },\n  container: {\n    paddingHorizontal: Styles.container.bigPaddingHorizontal,\n    height: Styles.header.height,\n    width: \"100%\",\n    // justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  wrapper: {\n    height: Styles.header.height,\n    width: \"100%\",\n    maxWidth: Styles.container.maxWidth,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  image: {\n    height: 40,\n    width: 180,\n  },\n  account: {\n    height: 40,\n    width: 80,\n    backgroundColor: \"white\",\n    borderRadius: 25,\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport Colors from \"../../constants/Colors\";\nimport { RootStackProps } from \"../../navigation\";\nimport MainContent from \"./MainContent\";\n\nexport default function MainScreen({ navigation }: RootStackProps<\"Main\">) {\n  const opacity = useSharedValue(0);\n\n  const rStyle = useAnimatedStyle(() => ({\n    opacity: opacity.value,\n  }));\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (opacity.value < 1) {\n        opacity.value += 0.01;\n      }\n    }, 25);\n\n    return () => clearInterval(interval);\n  }, [opacity]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.saleHeader}></View>\n      <MainContent />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  saleHeader: {\n    height: 80,\n    width: \"100%\",\n    backgroundColor: Colors.beige,\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { StyleSheet, Pressable } from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n  useDerivedValue,\n  interpolate,\n} from \"react-native-reanimated\";\nimport Colors from \"../constants/Colors\";\nimport { useState } from \"react\";\n\ntype Prop = {};\n\nconst size = 22;\n\nexport default function AnimatedHeart({}: Prop) {\n  const [active, setActive] = useState(false);\n  const show = useSharedValue<boolean>(false);\n\n  const toggleFavHandler = () => {\n    setActive((prevCheck) => !prevCheck);\n  };\n\n  useEffect(() => {\n    show.value = active;\n  }, [active]);\n\n  const derived = useDerivedValue(() => show.value, []);\n\n  const offStyle = useAnimatedStyle(() => {\n    const scale = interpolate(derived.value, [true, false], [0, 1]);\n    return {\n      transform: [\n        {\n          scale,\n        },\n      ],\n    };\n  }, []);\n\n  const activeStyle = useAnimatedStyle(() => {\n    const scale = interpolate(derived.value, [false, true], [0, 1]);\n    return {\n      transform: [\n        {\n          scale: withSpring(scale),\n        },\n      ],\n    };\n  }, []);\n\n  return (\n    <Pressable\n      onPress={toggleFavHandler}\n      style={({ pressed }) => [styles.barItem]}\n    >\n      <Animated.View style={[styles.current, offStyle]}>\n        <AntDesign name=\"hearto\" size={size} color={Colors.gray} />\n      </Animated.View>\n      <Animated.View style={[styles.current, activeStyle]}>\n        <AntDesign name=\"heart\" size={size} color=\"red\" />\n      </Animated.View>\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  barItem: {\n    height: size,\n    width: size,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  current: {\n    position: \"absolute\",\n  },\n});\n","export default {\n  darkGreen: \"#476930\",\n  // green: \"#86b049\",\n  green: \"#6CBE4B\",\n  lightGreen: \"#dff5ce\",\n  purple: \"#525b88\",\n  beige: \"#c8b88a\",\n  babyGray: \"#EEEEEE\",\n  lightGray: \"#E0E0E0\",\n  gray: \"#757575\",\n  gold: \"#ffd700\",\n};\n","import { LinkingOptions } from \"@react-navigation/native\";\nimport { RootStackParamList } from \"./index\";\nimport * as Linking from \"expo-linking\";\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl(\"/\")],\n  config: {\n    screens: {\n      Main: {\n        path: \"/Main\",\n      },\n      List: {\n        path: \"/List\",\n      },\n    },\n  },\n};\n\nexport default linking;\n","import React from \"react\";\nimport { TextInput, Text, Button, View, StyleSheet } from \"react-native\";\nimport * as yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { registerUser } from \"../../firebase/utils\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function Register({ closeModal }: any) {\n  const navigate = useNavigation();\n\n  const registerHandler = async (values: any) => {\n    const checkUser = await registerUser({\n      authEmail: values.email,\n      authPassword: values.password,\n    });\n    if (checkUser) {\n      closeModal();\n      navigate.navigate(\"List\");\n    } else {\n      alert(\"could not sign in\");\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      onSubmit={(values, onSubmitProps) => {\n        registerHandler(values);\n        onSubmitProps.resetForm();\n      }}\n      validationSchema={yup.object().shape({\n        email: yup.string().email().required(),\n        password: yup\n          .string()\n          .min(6)\n          .max(10, \"Password should not excced 10 chars.\")\n          .required(),\n        confirmPassword: yup\n          .string()\n          .required()\n          .equals([yup.ref(\"password\"), null], \"Password does not match\"),\n      })}\n    >\n      {({\n        values,\n        handleChange,\n        errors,\n        setFieldTouched,\n        touched,\n        isValid,\n        handleSubmit,\n      }) => (\n        <View style={styles.formContainer}>\n          <TextInput\n            value={values.email}\n            style={styles.inputStyle}\n            onChangeText={handleChange(\"email\")}\n            onBlur={() => setFieldTouched(\"email\")}\n            placeholder=\"E-mail\"\n          />\n          {touched.email && errors.email && (\n            <Text style={{ fontSize: 12, color: \"#FF0D10\" }}>\n              {errors.email}\n            </Text>\n          )}\n          <TextInput\n            value={values.password}\n            style={styles.inputStyle}\n            onChangeText={handleChange(\"password\")}\n            placeholder=\"Password\"\n            onBlur={() => setFieldTouched(\"password\")}\n            secureTextEntry={true}\n          />\n          {touched.password && errors.password && (\n            <Text style={{ fontSize: 12, color: \"#FF0D10\" }}>\n              {errors.password}\n            </Text>\n          )}\n          <TextInput\n            value={values.confirmPassword}\n            style={styles.inputStyle}\n            onChangeText={handleChange(\"confirmPassword\")}\n            placeholder=\"Confirm Password\"\n            onBlur={() => setFieldTouched(\"confirmPassword\")}\n            secureTextEntry={true}\n          />\n          {touched.confirmPassword && errors.confirmPassword && (\n            <Text style={{ fontSize: 12, color: \"#FF0D10\" }}>\n              {errors.confirmPassword}\n            </Text>\n          )}\n          <Button\n            color=\"#3740FE\"\n            title=\"Submit\"\n            disabled={!isValid}\n            onPress={handleSubmit}\n          />\n        </View>\n      )}\n    </Formik>\n  );\n}\n\nconst styles = StyleSheet.create({\n  formContainer: {\n    padding: 50,\n  },\n  inputStyle: {\n    borderWidth: 1,\n    borderColor: \"#4e4e4e\",\n    padding: 12,\n    marginBottom: 5,\n  },\n});\nconsole.disableYellowBox = true;\n","import React from \"react\";\nimport { TextInput, Text, Button, Alert, View, StyleSheet } from \"react-native\";\nimport * as yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { signInUser } from \"../../firebase/utils\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function Login({ closeModal }: any) {\n  const navigate = useNavigation();\n\n  const signInHandler = async (values: any) => {\n    const checkUser = await signInUser({\n      authEmail: values.email,\n      authPassword: values.password,\n    });\n    if (checkUser) {\n      closeModal();\n      navigate.navigate(\"List\");\n    } else {\n      alert(\"could not sign in\");\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n      }}\n      onSubmit={(values, onSubmitProps) => {\n        signInHandler(values);\n        onSubmitProps.resetForm();\n      }}\n      validationSchema={yup.object().shape({\n        email: yup.string().email().required(),\n        password: yup\n          .string()\n          .min(6)\n          .max(10, \"Password should not excced 10 chars.\")\n          .required(),\n      })}\n    >\n      {({\n        values,\n        handleChange,\n        errors,\n        setFieldTouched,\n        touched,\n        isValid,\n        handleSubmit,\n      }) => (\n        <View style={styles.formContainer}>\n          <TextInput\n            value={values.email}\n            style={styles.inputStyle}\n            onChangeText={handleChange(\"email\")}\n            onBlur={() => setFieldTouched(\"email\")}\n            placeholder=\"E-mail\"\n          />\n          {touched.email && errors.email && (\n            <Text style={{ fontSize: 12, color: \"#FF0D10\" }}>\n              {errors.email}\n            </Text>\n          )}\n          <TextInput\n            value={values.password}\n            style={styles.inputStyle}\n            onChangeText={handleChange(\"password\")}\n            placeholder=\"Password\"\n            onBlur={() => setFieldTouched(\"password\")}\n            secureTextEntry={true}\n          />\n          {touched.password && errors.password && (\n            <Text style={{ fontSize: 12, color: \"#FF0D10\" }}>\n              {errors.password}\n            </Text>\n          )}\n          <Button\n            color=\"#3740FE\"\n            title=\"Submit\"\n            disabled={!isValid}\n            onPress={handleSubmit}\n          />\n        </View>\n      )}\n    </Formik>\n  );\n}\n\nconst styles = StyleSheet.create({\n  formContainer: {\n    padding: 50,\n  },\n  inputStyle: {\n    borderWidth: 1,\n    borderColor: \"#4e4e4e\",\n    padding: 12,\n    marginBottom: 5,\n  },\n});\nconsole.disableYellowBox = true;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport {\n  StyleSheet,\n  TextInput,\n  View,\n  Button,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport Styles from \"../../constants/Styles\";\nimport { auth, registerUser, signInUser } from \"../../firebase/utils\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport CustomText from \"../../components/CustomText\";\n\nexport default function AuthForm({ setModalShow }: any) {\n  const [mode, setMode] = useState(\"register\");\n\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n\n  const registerHandler = () => {\n    registerUser({ authEmail: registerEmail, authPassword: registerPassword });\n  };\n\n  const closeModal = () => {\n    setModalShow(false);\n  };\n\n  const switchMode = () => {\n    if (mode == \"register\") {\n      setMode(\"login\");\n    } else {\n      setMode(\"register\");\n    }\n  };\n\n  return (\n    <View style={styles.wrapper}>\n      <TouchableWithoutFeedback onPress={() => {}}>\n        <View style={styles.formBg}>\n          <CustomText black size={24}>\n            {mode}\n          </CustomText>\n          {mode == \"register\" ? (\n            <Register closeModal={closeModal} />\n          ) : (\n            <Login closeModal={closeModal} />\n          )}\n          <Button\n            title={`Switch to ${mode == \"register\" ? \"Login\" : \"Register\"}`}\n            onPress={switchMode}\n          />\n        </View>\n      </TouchableWithoutFeedback>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  wrapper: {\n    height: Styles.window.wHeight,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 25,\n    zIndex: 100,\n  },\n  formBg: {\n    backgroundColor: \"white\",\n    height: \"80%\",\n    maxHeight: 680,\n    borderRadius: 10,\n    width: \"90%\",\n    maxWidth: 540,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import React from \"react\";\nimport { StyleSheet, View, TouchableWithoutFeedback } from \"react-native\";\nimport AuthForm from \"./AuthForm\";\n\nexport default function AnimatedModal({ setModalShow }: any) {\n  return (\n    <TouchableWithoutFeedback onPress={() => setModalShow(false)}>\n      <View style={styles.container}>\n        <AuthForm setModalShow={setModalShow} />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    // height: Styles.window.wHeight,\n    // height: Styles.window.wHeight,\n    height: \"100%\",\n    // width: \"100%\",\n    flexGrow: 1,\n    backgroundColor: \"rgba(0,0,0,.75)\",\n    zIndex: 50,\n  },\n});\n","import React from \"react\";\nimport { TextInput, Text, Button, View, StyleSheet } from \"react-native\";\nimport * as yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { addDoc, doc, setDoc, collection } from \"firebase/firestore\";\nimport { db, farmsRef } from \"../../firebase/utils\";\n\nexport default function AddForm() {\n  const initialValues = {\n    displayName: \"\",\n    storeImage: \"\",\n    storePhone: \"\",\n    storeOpen: \"\",\n    storeClose: \"\",\n  };\n  const phoneRegExp =\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n  const validationSchema = yup.object().shape({\n    displayName: yup\n      .string()\n      .trim()\n      .min(1)\n      .required(\"Please provide a store name\"),\n    storeImage: yup.string().trim(),\n    storePhone: yup\n      .string()\n      .matches(phoneRegExp, \"Phone number is not valid\")\n      .trim()\n      .min(10)\n      .max(10),\n    storeOpen: yup.string().trim(),\n    storeClose: yup.string().trim(),\n  });\n\n  const submitHandler = async (values: any) => {\n    const { displayName, storeImage, storePhone, storeOpen, storeClose } =\n      values;\n    let nameTaken = false;\n    const idName = displayName.replace(/ /g, \"\").toLowerCase();\n\n    // var ref = db.ref(\"farms/\");\n    // var query = ref.orderByChild(\"idName\").equalTo(idName);\n\n    // query.once(\"value\", function (snapshot) {\n    //   console.log(snapshot.exists());\n    // });\n    if (nameTaken) {\n      // var ref = firebase.database().ref(\"users/ada\");\n      // ref.once(\"value\").then(function (snapshot) {\n      //   var a = snapshot.exists(); // true\n      //   var b = snapshot.child(\"name\").exists(); // true\n      //   var c = snapshot.child(\"name/first\").exists(); // true\n      //   var d = snapshot.child(\"name/middle\").exists(); // false\n      // });\n    } else {\n      try {\n        console.log(storeImage);\n        await addDoc(farmsRef, {\n          idName,\n          displayName,\n          storeImage,\n          storePhone,\n          storeHours: {\n            open: storeOpen,\n            close: storeClose,\n          },\n        });\n        // await setDoc(doc(db, \"farms\", idName), {\n        //   displayName,\n        //   storeImage,\n        //   storePhone,\n        //   storeHours: {\n        //     open: storeOpen,\n        //     close: storeClose,\n        //   },\n        // });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, onSubmitProps) => {\n        submitHandler(values);\n        onSubmitProps.resetForm();\n      }}\n      validationSchema={validationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        errors,\n        setFieldTouched,\n        touched,\n        isValid,\n        handleSubmit,\n      }) => {\n        const { displayName, storeImage, storePhone, storeOpen, storeClose } =\n          values;\n        return (\n          <View style={styles.formContainer}>\n            <TextInput\n              value={displayName}\n              style={styles.inputStyle}\n              onChangeText={handleChange(\"displayName\")}\n              onBlur={() => setFieldTouched(\"displayName\")}\n              placeholder=\"Enter a store name\"\n            />\n            {touched.displayName && errors.displayName && (\n              <Text style={{ fontSize: 12, color: \"#FF0D10\" }}>\n                {errors.displayName}\n              </Text>\n            )}\n            <TextInput\n              value={storeImage}\n              style={styles.inputStyle}\n              onChangeText={handleChange(\"storeImage\")}\n              onBlur={() => setFieldTouched(\"storeImage\")}\n              placeholder=\"Image Url (optional)\"\n            />\n            <TextInput\n              value={storePhone}\n              style={styles.inputStyle}\n              onChangeText={handleChange(\"storePhone\")}\n              onBlur={() => setFieldTouched(\"storePhone\")}\n              placeholder=\"Phone Number (optional)\"\n            />\n            {touched.storePhone && errors.storePhone && (\n              <Text style={{ fontSize: 12, color: \"#FF0D10\" }}>\n                {errors.storePhone}\n              </Text>\n            )}\n            <TextInput\n              value={storeOpen}\n              style={styles.inputStyle}\n              onChangeText={handleChange(\"storeOpen\")}\n              onBlur={() => setFieldTouched(\"storeOpen\")}\n              placeholder=\"Open Time (optional)\"\n            />\n            <TextInput\n              value={storeClose}\n              style={styles.inputStyle}\n              onChangeText={handleChange(\"storeClose\")}\n              onBlur={() => setFieldTouched(\"storeClose\")}\n              placeholder=\"Close Time (optional)\"\n            />\n            <Button\n              color=\"#3740FE\"\n              title=\"Submit\"\n              disabled={!isValid}\n              onPress={handleSubmit}\n            />\n          </View>\n        );\n      }}\n    </Formik>\n  );\n}\n\nconst styles = StyleSheet.create({\n  formContainer: {\n    flex: 1,\n    // padding: 50,\n  },\n  inputStyle: {\n    borderWidth: 1,\n    borderColor: \"#4e4e4e\",\n    padding: 12,\n    marginBottom: 5,\n  },\n});\n","import React from \"react\";\nimport { StyleSheet, Image, View } from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport CustomText from \"../../components/CustomText\";\nimport Colors from \"../../constants/Colors\";\nimport Styles from \"../../constants/Styles\";\nimport { deleteDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../../firebase/utils\";\n\nexport default function ListCard({ item }: any) {\n  const { id, storeHours, storeImage, displayName, storePhone } = item;\n  const [image, setImage] = React.useState(storeImage);\n\n  const onError = () => {\n    setImage(require(\"../../assets/images/no_image.png\"));\n  };\n\n  const phoneFormat = (phoneNumberString: string) => {\n    var cleaned = (\"\" + phoneNumberString).replace(/\\D/g, \"\");\n    var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n      return \"(\" + match[1] + \") \" + match[2] + \"-\" + match[3];\n    }\n    return null;\n  };\n\n  const deleteHandler = () => {\n    const farmDoc = doc(db, \"farms\", id);\n    deleteDoc(farmDoc);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.wrapper}>\n        <Image\n          style={styles.image}\n          source={{ uri: storeImage }}\n          // onError={onError}\n          defaultSource={require(\"../../assets/images/gray.png\")}\n        />\n        <View style={styles.info}>\n          <View style={styles.title}>\n            <CustomText fancy bold black size={20}>\n              {displayName}\n            </CustomText>\n            <AntDesign\n              onPress={deleteHandler}\n              name=\"delete\"\n              size={Styles.starSize}\n              color=\"red\"\n            />\n          </View>\n          <View style={styles.location}>\n            <CustomText size={14} color={Colors.gray}>\n              Location\n            </CustomText>\n            <View style={styles.ratings}>\n              <AntDesign\n                name=\"star\"\n                size={Styles.starSize}\n                color={Colors.gold}\n              />\n              <AntDesign\n                name=\"star\"\n                size={Styles.starSize}\n                color={Colors.gold}\n              />\n              <AntDesign\n                name=\"star\"\n                size={Styles.starSize}\n                color={Colors.lightGray}\n              />\n              <AntDesign\n                name=\"star\"\n                size={Styles.starSize}\n                color={Colors.lightGray}\n              />\n              <AntDesign\n                name=\"star\"\n                size={Styles.starSize}\n                color={Colors.lightGray}\n              />\n            </View>\n            <CustomText size={14} color={Colors.gray}>\n              (0)\n            </CustomText>\n          </View>\n          <CustomText size={14} black>\n            Phone Number: {storePhone ? phoneFormat(storePhone) : \"N/A\"}\n          </CustomText>\n          <CustomText size={12} color={Colors.gray}>\n            Store Hours:{\" \"}\n            {storeHours.open && storeHours.close\n              ? `${storeHours.open} - ${storeHours.close}`\n              : \"N/A\"}\n          </CustomText>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 130,\n    width: \"100%\",\n    marginRight: 20,\n    overflow: \"hidden\",\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3,\n    },\n    shadowOpacity: 0.29,\n    shadowRadius: 4.65,\n  },\n  wrapper: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  image: {\n    height: \"100%\",\n    width: \"30%\",\n  },\n  info: {\n    height: \"100%\",\n    width: \"70%\",\n    justifyContent: \"space-between\",\n    padding: 20,\n  },\n  title: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  location: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  ratings: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginHorizontal: 10,\n  },\n});\n","import { onSnapshot } from \"firebase/firestore\";\nimport React from \"react\";\nimport { FlatList, StyleSheet } from \"react-native\";\nimport Styles from \"../../constants/Styles\";\nimport { farmsRef } from \"../../firebase/utils\";\nimport ListCard from \"./ListCard\";\n\nexport default function FarmList() {\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    const realTimeGetFarm = async () => {\n      onSnapshot(farmsRef, (snapshot) => {\n        let farms: any = [];\n        snapshot.docs.forEach((doc) => {\n          farms.push({ id: doc.id, ...doc.data() });\n        });\n        setData(farms);\n      });\n    };\n\n    realTimeGetFarm();\n  }, []);\n  return (\n    <FlatList\n      data={data}\n      keyExtractor={(item, index) => \"key\" + index}\n      style={styles.container}\n      contentContainerStyle={styles.contentContainer}\n      renderItem={({ item }: any) => <ListCard item={item} />}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: Styles.container.paddingVertical / 2,\n    flex: 1,\n  },\n  contentContainer: {\n    flexGrow: 1,\n  },\n});\n","import { onAuthStateChanged } from \"firebase/auth\";\nimport React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport CustomText from \"../../components/CustomText\";\nimport Styles from \"../../constants/Styles\";\nimport { auth } from \"../../firebase/utils\";\nimport AddForm from \"./AddForm\";\nimport VerticalList from \"./VerticalList\";\n\nexport default function ListScreen() {\n  const [user, setUser] = React.useState<any>({});\n\n  React.useEffect(() => {\n    const checkUser = async () => {\n      await onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n      });\n    };\n    checkUser();\n  }, [auth]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.wrapper}>\n        {user?.email ? (\n          <>\n            <VerticalList />\n            <AddForm />\n          </>\n        ) : (\n          <CustomText bold black size={32}>\n            Login to see this page\n          </CustomText>\n        )}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    paddingTop: Styles.container.paddingVertical,\n    paddingHorizontal: Styles.container.bigPaddingHorizontal,\n  },\n  wrapper: {\n    height: \"100%\",\n    width: \"100%\",\n    maxWidth: Styles.container.maxWidth,\n    flexDirection: \"row\",\n  },\n});\n","import { useNavigation } from \"@react-navigation/native\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n} from \"react-native\";\nimport Colors from \"../constants/Colors\";\nimport Styles from \"../constants/Styles\";\nimport { auth } from \"../firebase/utils\";\nimport CustomText from \"./CustomText\";\n\nexport default function Bubble({ setBubbleShow, setModalShow }: any) {\n  const [user, setUser] = React.useState<any>({});\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    const checkUser = async () => {\n      await onAuthStateChanged(auth, (currentUser) => {\n        setUser(currentUser);\n      });\n    };\n    checkUser();\n  }, [auth]);\n\n  const onPress = async () => {\n    if (user?.email) {\n      await signOut(auth);\n    } else {\n      setModalShow((prevCheck: boolean) => !prevCheck);\n    }\n    setBubbleShow((current: boolean) => !current);\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={() => setBubbleShow(false)}>\n      <View\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: 20,\n        }}\n      >\n        <View\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            maxWidth: Styles.container.maxWidth,\n          }}\n        >\n          <View style={styles.bubble}>\n            {user?.email ? (\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"List\")}\n                style={{\n                  flex: 1,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginVertical: 5,\n                }}\n              >\n                <CustomText\n                  size={22}\n                  color={Colors.green}\n                  style={{ fontWeight: 600 }}\n                >\n                  Edit Farms\n                </CustomText>\n              </TouchableOpacity>\n            ) : null}\n            <TouchableOpacity\n              onPress={onPress}\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginVertical: 5,\n              }}\n            >\n              <CustomText\n                size={22}\n                color={Colors.green}\n                style={{ fontWeight: 600 }}\n              >\n                {user?.email ? \"Logout\" : \"Sign In\"}\n              </CustomText>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  bubble: {\n    position: \"absolute\",\n    // height: 60,\n    padding: 10,\n    width: 200,\n    backgroundColor: \"white\",\n    borderRadius: 5,\n    borderWidth: 0.5,\n    borderColor: \"black\",\n    top: Styles.header.height - 10,\n    right: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n\n    elevation: 5,\n  },\n});\n","import {\n  DefaultTheme,\n  NavigationContainer,\n  RouteProp,\n} from \"@react-navigation/native\";\nimport {\n  createNativeStackNavigator,\n  NativeStackScreenProps,\n} from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport CustomText from \"../components/CustomText\";\nimport CustomHeader from \"../components/CustomHeader\";\nimport MainScreen from \"../screens/MainScreen/MainScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport AnimatedModal from \"../screens/AnimatedModal/AnimatedModal\";\nimport ListScreen from \"../screens/ListScreen/ListScreen\";\nimport Bubble from \"../components/Bubble\";\n\nconst MyTheme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    background: \"white\",\n  },\n};\n\nexport default function Navigation() {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [bubbleShow, setBubbleShow] = React.useState(false);\n\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      fallback={<CustomText>Loading...</CustomText>}\n      theme={MyTheme}\n    >\n      <CustomHeader bubbleShow={bubbleShow} setBubbleShow={setBubbleShow} />\n      <RootNavigator />\n      {bubbleShow && (\n        <Bubble setBubbleShow={setBubbleShow} setModalShow={setModalShow} />\n      )}\n      {modalShow && <AnimatedModal setModalShow={setModalShow} />}\n    </NavigationContainer>\n  );\n}\n\nexport type RootStackParamList = {\n  Main: undefined;\n  List: undefined;\n};\n\nexport type RootStackProps<T extends keyof RootStackParamList> = {\n  navigation: NativeStackScreenProps<RootStackParamList, T>;\n  route: RouteProp<RootStackParamList, T>;\n};\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <Stack.Screen name=\"Main\" component={MainScreen} />\n      <Stack.Screen name=\"List\" component={ListScreen} />\n    </Stack.Navigator>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport Navigation from \"./navigation\";\nimport React from \"react\";\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const functions = getFunctions();\n\n  // React.useEffect(() => {\n  //   const test = async () => {\n  //     const addMessage = await httpsCallable(functions, \"sayHello\");\n  //     console.log(addMessage());\n  //   };\n  //   test();\n  // }, []);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { FontAwesome } from \"@expo/vector-icons\";\nimport * as Font from \"expo-font\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useEffect, useState } from \"react\";\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          montserrat: require(\"../assets/fonts/Montserrat-Regular.ttf\"),\n          \"montserrat-bold\": require(\"../assets/fonts/Montserrat-Bold.ttf\"),\n          averia: require(\"../assets/fonts/AveriaSerifLibre-Regular.ttf\"),\n          \"averia-bold\": require(\"../assets/fonts/AveriaSerifLibre-Bold.ttf\"),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import React from \"react\";\nimport { StyleSheet, Image, View, TouchableOpacity } from \"react-native\";\nimport CustomText from \"../../components/CustomText\";\nimport Colors from \"../../constants/Colors\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport Styles from \"../../constants/Styles\";\nimport AnimatedHeart from \"../../components/AnimatedHeart\";\n\nexport default function Card({ item }: any) {\n  const { storeHours, storeImage, displayName, storePhone } = item;\n  const [image, setImage] = React.useState(storeImage);\n\n  const onError = () => {\n    setImage(require(\"../../assets/images/no_image.png\"));\n  };\n\n  const phoneFormat = (phoneNumberString: string) => {\n    var cleaned = (\"\" + phoneNumberString).replace(/\\D/g, \"\");\n    var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n      return \"(\" + match[1] + \") \" + match[2] + \"-\" + match[3];\n    }\n    return null;\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.wrapper}>\n        <Image style={styles.image} source={image} onError={onError} />\n        <View style={styles.info}>\n          <View style={styles.title}>\n            <CustomText fancy bold black size={20}>\n              {displayName}\n            </CustomText>\n            <AnimatedHeart />\n          </View>\n          <View style={styles.location}>\n            <CustomText size={14} color={Colors.gray}>\n              Store Hours:{\" \"}\n              {storeHours.open && storeHours.close\n                ? `${storeHours.open} - ${storeHours.close}`\n                : \"N/A\"}\n            </CustomText>\n            {/* <CustomText size={14} color={Colors.gray}>\n              Location\n            </CustomText>\n            <View style={styles.ratings}>\n              <AntDesign\n                name=\"star\"\n                size={Styles.starSize}\n                color={Colors.gold}\n              />\n              <AntDesign\n                name=\"star\"\n                size={Styles.starSize}\n                color={Colors.gold}\n              />\n              <AntDesign\n                name=\"star\"\n                size={Styles.starSize}\n                color={Colors.lightGray}\n              />\n              <AntDesign\n                name=\"star\"\n                size={Styles.starSize}\n                color={Colors.lightGray}\n              />\n              <AntDesign\n                name=\"star\"\n                size={Styles.starSize}\n                color={Colors.lightGray}\n              />\n            </View>\n            <CustomText size={14} color={Colors.gray}>\n              (0)\n            </CustomText> */}\n          </View>\n          {/* <CustomText size={14} black style={{ fontWeight: 600 }}>\n            69 products in stock\n          </CustomText> */}\n          <CustomText size={14} black style={{ fontWeight: 600 }}>\n            Phone Number: {storePhone ? phoneFormat(storePhone) : \"N/A\"}\n          </CustomText>\n          <View style={styles.btnContain}>\n            <TouchableOpacity>\n              <CustomText\n                size={18}\n                color={Colors.green}\n                style={{ fontWeight: 600 }}\n              >\n                Shop Now\n              </CustomText>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 300,\n    width: 400,\n    marginRight: 20,\n    backgroundColor: \"white\",\n    overflow: \"hidden\",\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 3,\n    },\n    shadowOpacity: 0.29,\n    shadowRadius: 4.65,\n  },\n  wrapper: {\n    flex: 1,\n  },\n  image: {\n    height: \"50%\",\n    width: \"100%\",\n  },\n  info: {\n    height: \"50%\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    padding: 20,\n  },\n  title: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  location: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  ratings: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginHorizontal: 10,\n  },\n  btnContain: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n  },\n});\n","import { onSnapshot } from \"firebase/firestore\";\nimport React from \"react\";\nimport { StyleSheet, FlatList } from \"react-native\";\nimport Styles from \"../../constants/Styles\";\nimport { farmsRef, realTimeGetFarm } from \"../../firebase/utils\";\nimport MainCard from \"./MainCard\";\n\nexport default function HorizontalFlat() {\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    const realTimeGetFarm = async () => {\n      onSnapshot(farmsRef, (snapshot) => {\n        let farms: any = [];\n        snapshot.docs.forEach((doc) => {\n          farms.push({ id: doc.id, ...doc.data() });\n        });\n        setData(farms);\n      });\n    };\n\n    realTimeGetFarm();\n  }, [farmsRef]);\n  return (\n    <FlatList\n      data={data}\n      keyExtractor={(item, index) => \"key\" + index}\n      style={styles.container}\n      contentContainerStyle={styles.contentContainer}\n      horizontal\n      showsHorizontalScrollIndicator={false}\n      renderItem={({ item }: any) => <MainCard item={item} />}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n  },\n  contentContainer: {\n    margin: 5,\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { StyleSheet, Image, View, Pressable } from \"react-native\";\nimport CustomText from \"../../components/CustomText\";\nimport Colors from \"../../constants/Colors\";\nimport Styles from \"../../constants/Styles\";\n\nexport default function Jumbo() {\n  return (\n    <View style={styles.jumbo}>\n      <Image\n        style={styles.image}\n        source={require(\"../../assets/images/main.jpg\")}\n      />\n      <View style={styles.jumboRight}>\n        <CustomText size={26} bold fancy>\n          Support the farmers you love\n        </CustomText>\n        <CustomText size={16}>\n          GrownBy makes it easy to shop directly from any participating farm in\n          the US. We give farmers the most money for what they grow.\n        </CustomText>\n        <Pressable\n          onPress={() => {}}\n          style={({ pressed }) => [\n            styles.button,\n            {\n              opacity: pressed ? 0.5 : 1,\n              // transform: [{ scale: pressed ? 1.1 : 1 }],\n            },\n          ]}\n        >\n          <CustomText size={16} bold style={{ color: Colors.purple }}>\n            Shop Now\n          </CustomText>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  jumbo: {\n    backgroundColor: Colors.purple,\n    overflow: \"hidden\",\n    height: 350,\n    width: \"100%\",\n    flexDirection: \"row\",\n    borderRadius: 10,\n    marginBottom: Styles.container.paddingVertical,\n  },\n  image: {\n    height: \"100%\",\n    width: \"70%\",\n  },\n  jumboRight: {\n    height: \"100%\",\n    width: \"30%\",\n    padding: 40,\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n  },\n  button: {\n    backgroundColor: Colors.lightGreen,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n    borderRadius: 10,\n  },\n});\n","import React from \"react\";\nimport { StyleSheet, View, TouchableOpacity, Pressable } from \"react-native\";\nimport CustomText from \"../../components/CustomText\";\nimport Colors from \"../../constants/Colors\";\nimport Styles from \"../../constants/Styles\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nconst arrowSize = 24;\n\nconst PressBtn = ({ direction }: { direction: string }) => {\n  const name = \"keyboard-arrow-\" + direction;\n\n  return (\n    <Pressable\n      onPress={() => {}}\n      style={({ pressed }) => [\n        styles.button,\n        {\n          opacity: pressed ? 0.5 : 1,\n          backgroundColor: pressed ? Colors.green : Colors.babyGray,\n        },\n      ]}\n    >\n      {({ pressed }) => (\n        <MaterialIcons\n          name={name}\n          size={arrowSize}\n          color={pressed ? \"white\" : Colors.gray}\n        />\n      )}\n    </Pressable>\n  );\n};\n\nexport default function Pagination() {\n  return (\n    <View style={styles.container}>\n      <CustomText fancy bold black size={20}>\n        Featured Farms\n      </CustomText>\n      <View style={styles.rightSide}>\n        <TouchableOpacity>\n          <CustomText\n            size={20}\n            color={Colors.green}\n            style={{ fontWeight: 700, marginRight: 10 }}\n          >\n            See All\n          </CustomText>\n        </TouchableOpacity>\n        <PressBtn direction=\"left\" />\n        <PressBtn direction=\"right\" />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // height: 20,\n    width: \"100%\",\n    marginVertical: Styles.container.paddingVertical,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  rightSide: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  button: {\n    padding: 2.5,\n    marginLeft: 5,\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport Styles from \"../../constants/Styles\";\nimport HorizontalFlat from \"./HorizontalFlat\";\nimport Jumbo from \"./Jumbo\";\nimport Pagination from \"./Pagination\";\n\nexport default function MainContent() {\n  return (\n    <View style={styles.container}>\n      <View style={styles.wrapper}>\n        <Jumbo />\n        <Pagination />\n        <HorizontalFlat />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    paddingTop: Styles.container.paddingVertical,\n    paddingHorizontal: Styles.container.bigPaddingHorizontal,\n  },\n  wrapper: {\n    // flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    maxWidth: Styles.container.maxWidth,\n  },\n});\n","import { Dimensions } from \"react-native\";\n\nconst wWidth = Dimensions.get(\"window\").width;\nconst wHeight = Dimensions.get(\"window\").height;\n\nconst sWidth = Dimensions.get(\"screen\").width;\nconst sHeight = Dimensions.get(\"screen\").height;\n\n// 320px — 480px: Mobile devices\n// 481px — 768px: iPads, Tablets\n// 769px — 1024px: Small screens, laptops\n// 1025px — 1200px: Desktops, large screens\n// 1201px and more —  Extra large screens, TV\n\nlet isBig = wWidth <= 768 ? false : true;\n\nexport default {\n  starSize: 16,\n  header: {\n    height: 80,\n  },\n  window: {\n    wWidth,\n    wHeight,\n    sWidth,\n    sHeight,\n  },\n  container: {\n    maxWidth: 1360,\n    paddingHorizontal: \"2.5%\",\n    bigPaddingHorizontal: \"10%\",\n    paddingVertical: 20,\n  },\n  isSmallDevice: wWidth < 375,\n};\n","module.exports = __webpack_public_path__ + \"./fonts/Montserrat-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Montserrat-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/AveriaSerifLibre-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/AveriaSerifLibre-Bold.ttf\";","module.exports = __webpack_public_path__ + \"static/media/logo.6c6a373c.png\";","module.exports = __webpack_public_path__ + \"static/media/main.89d5525f.jpg\";","import React from \"react\";\nimport { Text } from \"react-native\";\n\ninterface Props {\n  bold?: boolean;\n  color?: string;\n  black?: boolean;\n  size?: number;\n  fancy?: boolean;\n  style?: any;\n  numberOfLines?: number;\n  children: React.ReactNode;\n}\n\nexport default function CustomText({\n  bold,\n  color,\n  black,\n  size,\n  fancy,\n  style,\n  children,\n  numberOfLines,\n}: Props) {\n  const fancyFont = fancy ? \"averia\" : \"montserrat\";\n  const defaultColor = black ? \"black\" : \"white\";\n\n  return (\n    <Text\n      numberOfLines={numberOfLines}\n      style={[\n        {\n          fontFamily: bold ? `${fancyFont}-bold` : fancyFont,\n          color: color ? color : defaultColor,\n          fontSize: size ? size : 14,\n        },\n        style,\n      ]}\n    >\n      {children}\n    </Text>\n  );\n}\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport firebaseConfig from \"./config\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  addDoc,\n  deleteDoc,\n  doc,\n  onSnapshot,\n} from \"firebase/firestore\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\n\n//init firebase\nconst app = initializeApp(firebaseConfig);\n//init service\nexport const db = getFirestore(app);\nexport const auth = getAuth(app);\n\nexport const farmsRef = collection(db, \"farms\");\n\n//Props\ninterface AuthProps {\n  authEmail: string;\n  authPassword: string;\n}\n\ninterface FarmInputProps {\n  displayName: string;\n  storeImage: string;\n  storePhone: string;\n  storeHours: {\n    open: string;\n    close: string;\n  };\n}\n//methods\n\n//AUTH\nexport const registerUser = async ({ authEmail, authPassword }: AuthProps) => {\n  try {\n    const data = await createUserWithEmailAndPassword(\n      auth,\n      authEmail,\n      authPassword\n    );\n    return data.user.email;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const signInUser = async ({ authEmail, authPassword }: AuthProps) => {\n  try {\n    const data = await signInWithEmailAndPassword(\n      auth,\n      authEmail,\n      authPassword\n    );\n    return data.user.email;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const checkIfLoggedIn = async () => {\n  const loggedIn = await onAuthStateChanged(auth, (currentUser) => currentUser);\n  return loggedIn;\n};\n//FARM\n\n//get doc\nexport const realTimeGetFarm = async () => {\n  let farms: any = [];\n  await onSnapshot(farmsRef, (snapshot) => {\n    snapshot.docs.forEach((doc) => {\n      farms.push({ id: doc.id, ...doc.data() });\n    });\n  });\n  return farms;\n};\n\nexport const getFarms = async () => {\n  try {\n    const data = await getDocs(farmsRef);\n    //returns array\n    const farms = data.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n\n    console.log(farms);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n//add doc\nexport const addFarm = async (farmInput: FarmInputProps) => {\n  try {\n    addDoc(farmsRef, farmInput);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n//delete doc\nexport const deleteFarm = async (id: string) => {\n  const docRef = doc(db, \"farms\", id);\n\n  await deleteDoc(docRef);\n};\n","// Your web app's Firebase configuration\nexport default {\n  apiKey: \"AIzaSyA_xA8vAXYiLtlBWGTdemSR9QezdmZA068\",\n  authDomain: \"farm-gen.firebaseapp.com\",\n  projectId: \"farm-gen\",\n  storageBucket: \"farm-gen.appspot.com\",\n  messagingSenderId: \"619758021234\",\n  appId: \"1:619758021234:web:b156fd3584e0f2cbe070eb\",\n};\n","module.exports = __webpack_public_path__ + \"static/media/gray.f39f4606.png\";"],"sourceRoot":""}